{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","components/Items/Items.ts","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageNumbers","Math","ceil","isFirstPage","isLastPage","length","className","cn","disabled","href","onClick","map","pageNumber","active","items","App","itemsPerPageOptions","useState","itemsNumberPerPage","setItemsNumberPerPage","activePageNumber","setActivePage","itemNumberStart","itemNumberEnd","min","id","value","onChange","event","Number","target","option","htmlFor","pageNum","slice","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EACFX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAC9BM,EACFL,IAAgBE,EAAY,GAC1BI,EACFN,IAAgBE,EAAYA,EAAYK,OAAS,GAErD,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUL,IADZ,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EAAc,OAAS,QACtCO,QAAS,kBAAMP,GAAeJ,EAAaD,EAAc,IAL3D,oBAWDE,EAAYW,KAAI,SAACC,GAAD,OACf,oBAAIN,UAAWC,IACb,YACA,CAAEM,OAAQD,IAAed,IAF3B,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,SAKP,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUJ,IADZ,SAIE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EAAa,OAAS,QACrCM,QAAS,kBAAMN,GAAcL,EAAaD,EAAc,IAL1D,wBC3DKgB,EAAQzB,EAAW,EAAG,IAChCsB,KAAI,SAAAlB,GAAC,qBAAYA,MCGPsB,EAAgB,WAC3B,IAAMC,EACF,CAAC,EAAG,EAAG,GAAI,IACf,EACIC,mBAASD,EAAoB,IADjC,mBAAOE,EAAP,KAA2BC,EAA3B,KAEA,EACIF,mBAAS,GADb,mBAAOG,EAAP,KAAyBC,EAAzB,KAkBMC,EACFJ,GAAsBE,EAAmB,GAAK,EAC5CG,EACFtB,KAAKuB,IACLN,EAAqBE,EACrBN,EAAMT,QAGV,OACE,sBAAKC,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBAEYc,EAFZ,mBAEuCE,EAFvC,cAE4DC,EAF5D,eAEgFT,EAAMT,OAFtF,OAMA,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOR,EACPS,SA9BN,SAACC,GACDT,EAAsBU,OAAOD,EAAME,OAAOJ,QAC1CL,EAAc,IAuBV,SAOGL,EAAoBL,KAAI,SAACoB,GAAD,OACvB,wBAAQL,MAAOK,EAAf,SACGA,GADyBA,UAOlC,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOkB,EAAMT,OACbR,QAASqB,EACTpB,YAAasB,EACbrB,aA3DF,SAACkC,GACGA,EAAU,GACTA,EAAUhC,KAAKC,KAAKY,EAAMT,OAASa,IAIxCG,EAAcY,MAwDd,6BAEInB,EAAMoB,MACJhB,GAAsBE,EAAmB,GACzCF,EAAqBE,GACrBT,KAAI,SAAAwB,GAAI,OAAK,oBAAI,UAAQ,OAAZ,SAAoBA,aC9E7CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.49ed190d.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const pageNumbers\n    = getNumbers(1, Math.ceil(total / perPage));\n  const isFirstPage: boolean\n    = currentPage === pageNumbers[0];\n  const isLastPage: boolean\n    = currentPage === pageNumbers[pageNumbers.length - 1];\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: isFirstPage,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage ? 'true' : 'false'}\n          onClick={() => isFirstPage || onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map((pageNumber) => (\n        <li className={cn(\n          'page-item',\n          { active: pageNumber === currentPage },\n        )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', {\n        disabled: isLastPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage ? 'true' : 'false'}\n          onClick={() => isLastPage || onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { getNumbers } from '../../utils';\n\nexport const items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { items } from './components/Items';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport const App: React.FC = () => {\n  const itemsPerPageOptions\n    = [3, 5, 10, 20];\n  const [itemsNumberPerPage, setItemsNumberPerPage]\n    = useState(itemsPerPageOptions[1]);\n  const [activePageNumber, setActivePage]\n    = useState(1);\n  const handleSetCurrentPage\n    = (pageNum: number): void => {\n      if (pageNum < 0\n        || pageNum > Math.ceil(items.length / itemsNumberPerPage)) {\n        return;\n      }\n\n      setActivePage(pageNum);\n    };\n\n  const handleItemsPerPageOptions\n    = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n      setItemsNumberPerPage(Number(event.target.value));\n      setActivePage(1);\n    };\n\n  const itemNumberStart\n    = itemsNumberPerPage * (activePageNumber - 1) + 1;\n  const itemNumberEnd\n    = Math.min(\n      itemsNumberPerPage * activePageNumber,\n      items.length,\n    );\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {\n          `Page ${activePageNumber} (items ${itemNumberStart} - ${itemNumberEnd} of ${items.length})`\n        }\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsNumberPerPage}\n            onChange={handleItemsPerPageOptions}\n          >\n            {itemsPerPageOptions.map((option) => (\n              <option value={option} key={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsNumberPerPage}\n        currentPage={activePageNumber}\n        onPageChange={handleSetCurrentPage}\n      />\n\n      <ul>\n        {\n          items.slice(\n            itemsNumberPerPage * (activePageNumber - 1),\n            itemsNumberPerPage * activePageNumber,\n          ).map(item => (<li data-cy=\"item\">{item}</li>))\n        }\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}